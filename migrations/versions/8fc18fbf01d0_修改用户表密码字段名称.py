"""修改用户表密码字段名称

Revision ID: 8fc18fbf01d0
Revises: ccbf5a21d4b9
Create Date: 2025-03-17 12:41:29.188929

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8fc18fbf01d0'
down_revision = 'ccbf5a21d4b9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index('idx_user_created')
        batch_op.drop_index('idx_user_read')
        batch_op.drop_index('idx_user_type')
        batch_op.drop_index('ix_notifications_created_at')
        batch_op.drop_index('ix_notifications_read')
        batch_op.drop_index('ix_notifications_target_id')
        batch_op.drop_index('ix_notifications_type')
        batch_op.drop_index('ix_notifications_user_id')

    op.drop_table('notifications')
    
    # 添加password_hash列，默认值为空字符串的哈希值
    op.add_column('users', sa.Column('password_hash', sa.String(length=128), nullable=True))
    
    # 使用SQL更新password_hash列的值
    op.execute("UPDATE users SET password_hash = password")
    
    # 设置password_hash列为非空
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password_hash', nullable=False)
        batch_op.drop_column('password')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.VARCHAR(length=128), nullable=False))
        batch_op.drop_column('password_hash')

    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=500), nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('target_id', sa.INTEGER(), nullable=True),
    sa.Column('read', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('ix_notifications_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_notifications_type', ['type'], unique=False)
        batch_op.create_index('ix_notifications_target_id', ['target_id'], unique=False)
        batch_op.create_index('ix_notifications_read', ['read'], unique=False)
        batch_op.create_index('ix_notifications_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_user_type', ['user_id', 'type'], unique=False)
        batch_op.create_index('idx_user_read', ['user_id', 'read'], unique=False)
        batch_op.create_index('idx_user_created', ['user_id', 'created_at'], unique=False)

    op.create_table('test',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
